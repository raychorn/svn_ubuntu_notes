a:3:{s:5:"child";a:1:{s:0:"";a:1:{s:3:"rss";a:1:{i:0;a:6:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:1:{s:7:"version";s:3:"2.0";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:0:"";a:1:{s:7:"channel";a:1:{i:0;a:6:{s:4:"data";s:42:"









































";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:16:"Python DevCenter";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:29:"http://www.onlamp.com/python/";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:48:"The O'Reilly Network's Python DevCenter Articles";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"copyright";a:1:{i:0;a:5:{s:4:"data";s:30:"Copyright O'Reilly Media, Inc.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"language";a:1:{i:0;a:5:{s:4:"data";s:5:"en-US";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"docs";a:1:{i:0;a:5:{s:4:"data";s:37:"http://blogs.law.harvard.edu/tech/rss";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"item";a:15:{i:0;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:40:"Processing Mailbox Files with mailbox.py";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:156:"http://www.onlamp.com/pub/a/python/2007/06/28/processing-mailbox-files-with-mailboxpy.html?CMP=OTC-UD6648202101&ATT=Processing+Mailbox+Files+with+mailbox+py";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:90:"http://www.onlamp.com/pub/a/python/2007/06/28/processing-mailbox-files-with-mailboxpy.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:626:"<a href='http://www.onlamp.com/pub/a/python/2007/06/28/processing-mailbox-files-with-mailboxpy.html?CMP=OTC-UD6648202101&amp;ATT=Processing+Mailbox+Files+with+mailbox+py'><img src='http://www.oreillynet.com/standard-tiles/onlamp/111-horse_app.jpg' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Everyone has, at one time or another, wished they could use a program to grundge through their mailbox, cleaning it up and sorting it, or transforming the mail into something entirely different. A.M. Kuchling shows one way to do just that, using the Python mailbox.py package.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:41:"webmaster@oreillynet.com (A. M. Kuchling)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:6:"Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 28 Jun 2007 14:46:11 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2007-06-28T14:46:11-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:1;a:6:{s:4:"data";s:23:"
	
	
	
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:3:{s:0:"";a:8:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:17:"PyCon 2007 Wrapup";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:111:"http://www.onlamp.com/pub/a/python/2007/03/08/pycon-2007-wrapup.html?CMP=OTC-UD6648202101&ATT=PyCon+2007+Wrapup";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:68:"http://www.onlamp.com/pub/a/python/2007/03/08/pycon-2007-wrapup.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1052:"<a href='http://www.onlamp.com/pub/a/python/2007/03/08/pycon-2007-wrapup.html?CMP=OTC-UD6648202101&amp;ATT=PyCon+2007+Wrapup'><img src='http://www.oreillynet.com/standard-tiles/onlamp/111-owl.jpg' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Jeremy Jones summarizes the interesting developments in the world of Python in 2006 and offers some predictions for 2007. Also included is a 32-minute interview with Guido van Rossum discussing the upcoming release of Python 3000. This is the first time that backward compatibility is an issue, and Guido addresses what you need to do to prepare, discusses the strengths and weaknesses of the new conversion tool, and points out the benefits of several new language features (for example, full support for Unicode strings). He also discusses the controversy and misunderstanding some of these changes have caused in the Python community, and how they're being resolved. Finally, he offers his heartfelt thanks to the Python community for "a great ride."";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:39:"webmaster@oreillynet.com (Jeremy Jones)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:6:"Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:28:"Fri, 9 Mar 2007 09:45:02 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:9:"enclosure";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:3:{s:3:"url";s:57:"http://downloads.oreilly.com/python/pycon-2007-wrapup.mp3";s:6:"length";s:8:"31645197";s:4:"type";s:10:"audio/mpeg";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2007-03-09T09:45:02-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:42:"http://www.itunes.com/dtds/podcast-1.0.dtd";a:2:{s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:12:"Jeremy Jones";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"duration";a:1:{i:0;a:5:{s:4:"data";s:8:"32:00:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:2;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:44:"Why I Stopped Coding and Why I'd Start Again";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:141:"http://www.onlamp.com/pub/a/python/2007/01/18/why-i-stopped-coding.html?CMP=OTC-UD6648202101&ATT=Why+I+Stopped+Coding+and+Why+I+d+Start+Again";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:71:"http://www.onlamp.com/pub/a/python/2007/01/18/why-i-stopped-coding.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:743:"<a href='http://www.onlamp.com/pub/a/python/2007/01/18/why-i-stopped-coding.html?CMP=OTC-UD6648202101&amp;ATT=Why+I+Stopped+Coding+and+Why+I+d+Start+Again'><img src='http://www.oreillynet.com/python/2007/01/18/graphics/111-whyIstopped.jpg' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>What happens when programming stops being fun? What do you do when juggling dependencies and worrying about installation issues takes all of the joy out of writing code for other people? You can stop coding... or you can try to address the underlying problems. Brian McConnell postulates an enhancement of the Python language to make programming as fun as it was in the BASIC-in-ROM minicomputer days.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:42:"webmaster@oreillynet.com (Brian McConnell)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:46:"Python, Programming, Tools, Programming, Tools";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 18 Jan 2007 12:15:05 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2007-01-18T12:15:05-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:3;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:25:"Getting Started with WSGI";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:127:"http://www.onlamp.com/pub/a/python/2006/11/09/getting-started-with-wsgi.html?CMP=OTC-UD6648202101&ATT=Getting+Started+with+WSGI";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:76:"http://www.onlamp.com/pub/a/python/2006/11/09/getting-started-with-wsgi.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:595:"<a href='http://www.onlamp.com/pub/a/python/2006/11/09/getting-started-with-wsgi.html?CMP=OTC-UD6648202101&amp;ATT=Getting+Started+with+WSGI'><img src='http://www.oreillynet.com/python/2006/11/09/graphics/111-wsgi.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Python 2.5 added support for the WSGI standard. This is a specification for web programming that allows interoperability between frameworks and components. It's also terribly easy to use. Jason Briggs introduces WSGI and gives the background you need to use it productively.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:42:"webmaster@oreillynet.com (Jason R. Briggs)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:16:"Python, Internet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:28:"Thu, 9 Nov 2006 15:45:03 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-11-09T15:45:03-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:4;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:24:"What's New in Python 2.5";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:110:"http://www.onlamp.com/pub/a/python/2006/10/26/python-25.html?CMP=OTC-UD6648202101&ATT=What+s+New+in+Python+2+5";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:60:"http://www.onlamp.com/pub/a/python/2006/10/26/python-25.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:526:"<a href='http://www.onlamp.com/pub/a/python/2006/10/26/python-25.html?CMP=OTC-UD6648202101&amp;ATT=What+s+New+in+Python+2+5'><img src='http://www.oreillynet.com/python/2006/10/26/graphics/111-python2.5.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>In 15 years, Python has grown out of its initial niche to evolve in new directions. The latest version, Python 2.5, adds and refines features on the way to Python 3000. Jeff Cogswell demonstrates the latest additions.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:40:"webmaster@oreillynet.com (Jeff Cogswell)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:6:"Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 26 Oct 2006 15:18:18 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-10-26T15:18:18-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:5;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:16:"Running a Sprint";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:109:"http://www.onlamp.com/pub/a/python/2006/10/19/running-a-sprint.html?CMP=OTC-UD6648202101&ATT=Running+a+Sprint";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:67:"http://www.onlamp.com/pub/a/python/2006/10/19/running-a-sprint.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:626:"<a href='http://www.onlamp.com/pub/a/python/2006/10/19/running-a-sprint.html?CMP=OTC-UD6648202101&amp;ATT=Running+a+Sprint'><img src='http://www.oreillynet.com/python/2006/10/19/graphics/111-runSprint.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Many agile development techniques apply to plenty of development models. One interesting approach for distributed development projects is the sprint--a short, directed programming effort with programmers all in the same room. Steve Holden, who organized the recent Python Need for Speed sprint, explains how they work.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:39:"webmaster@oreillynet.com (Steve Holden)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:17:"Python, Community";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 19 Oct 2006 16:31:30 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-10-19T16:31:30-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:6;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:37:"Untwisting Python Network Programming";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:151:"http://www.onlamp.com/pub/a/python/2006/08/10/untwisting-python-network-programming.html?CMP=OTC-UD6648202101&ATT=Untwisting+Python+Network+Programming";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:88:"http://www.onlamp.com/pub/a/python/2006/08/10/untwisting-python-network-programming.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:699:"<a href='http://www.onlamp.com/pub/a/python/2006/08/10/untwisting-python-network-programming.html?CMP=OTC-UD6648202101&amp;ATT=Untwisting+Python+Network+Programming'><img src='http://www.oreillynet.com/images/tiles/111-pythonNP.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Python is a powerful and usable language for network programming; its standard library includes several modules for multiple Internet protocols. There's also the powerful Twisted framework. How do you get started? When do you use the standard library and when do you go Twisted? Kendrew Lau demonstrates usable applications with both approaches to help you decide.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:38:"webmaster@oreillynet.com (Kendrew Lau)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:16:"Python, Internet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 10 Aug 2006 16:14:50 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-08-10T16:14:50-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:7;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:20:"Using REST with Ajax";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:117:"http://www.onlamp.com/pub/a/python/2006/02/23/using-rest-with-ajax.html?CMP=OTC-UD6648202101&ATT=Using+REST+with+Ajax";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:71:"http://www.onlamp.com/pub/a/python/2006/02/23/using-rest-with-ajax.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:607:"<a href='http://www.onlamp.com/pub/a/python/2006/02/23/using-rest-with-ajax.html?CMP=OTC-UD6648202101&amp;ATT=Using+REST+with+Ajax'><img src='http://www.oreillynet.com/python/2006/02/23/graphics/111-ajax_rest.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>The RESTful view of the Web says to use HTTP's verbs--GET, PUT, POST, and DELETE--where appropriate. Yet most browsers support only GET and POST. How can you achieve RESTfulness without writing your own client? Nic Ferrier shows how to design a RESTful web application using Ajax and Python.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:38:"webmaster@oreillynet.com (Nic Ferrier)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:16:"Python, Internet";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 11 May 2006 09:44:42 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-05-11T09:44:42-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:8;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:33:"Building Decision Trees in Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:127:"http://www.onlamp.com/pub/a/python/2006/02/09/ai_decision_trees.html?CMP=OTC-UD6648202101&ATT=Building+Decision+Trees+in+Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:68:"http://www.onlamp.com/pub/a/python/2006/02/09/ai_decision_trees.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:639:"<a href='http://www.onlamp.com/pub/a/python/2006/02/09/ai_decision_trees.html?CMP=OTC-UD6648202101&amp;ATT=Building+Decision+Trees+in+Python'><img src='http://www.oreillynet.com/python/2006/02/09/graphics/111-python_ai.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Python is a good language for machine learning--it's easy to express powerful algorithms maintainably, and it's flexible to experiment with new approaches. Christopher Roach demonstrates the use and implementation of decision trees, a fundamental feature of datamining, that can help you find trends in your data.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:63:"webmaster@oreillynet.com (Christopher Roach, Christopher Roach)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:17:"Python, Tutorials";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 11 May 2006 09:44:42 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-05-11T09:44:42-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:9;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:46:"Building Recursive Descent Parsers with Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:132:"http://www.onlamp.com/pub/a/python/2006/01/26/pyparsing.html?CMP=OTC-UD6648202101&ATT=Building+Recursive+Descent+Parsers+with+Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:60:"http://www.onlamp.com/pub/a/python/2006/01/26/pyparsing.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:624:"<a href='http://www.onlamp.com/pub/a/python/2006/01/26/pyparsing.html?CMP=OTC-UD6648202101&amp;ATT=Building+Recursive+Descent+Parsers+with+Python'><img src='http://www.oreillynet.com/python/2006/01/26/graphics/111-parsing.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Someday your program will have to parse text. If you're lucky, a few regular expressions will handle it. Otherwise, you need to write a parser. Don't be afraid of that dragon book from college--writing a parser in Python is easy with Pyparsing. Paul McGuire explains everything you need to know.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:39:"webmaster@oreillynet.com (Paul McGuire)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:19:"Python, Programming";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 11 May 2006 09:44:42 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-05-11T09:44:42-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:10;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:31:"Profiling and Optimizing Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:117:"http://www.onlamp.com/pub/a/python/2005/12/15/profiling.html?CMP=OTC-UD6648202101&ATT=Profiling+and+Optimizing+Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:60:"http://www.onlamp.com/pub/a/python/2005/12/15/profiling.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:667:"<a href='http://www.onlamp.com/pub/a/python/2005/12/15/profiling.html?CMP=OTC-UD6648202101&amp;ATT=Profiling+and+Optimizing+Python'><img src='http://www.oreillynet.com/python/2005/12/15/graphics/111-profiling.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Premature optimization is the root of all sorts of evil in programming, but meaningful and necessary optimization is vital to effective and efficient programming. When your Python program just doesn't perform, don't reach for C or C++ without first playing with the Python profiler. Jeremy Jones shows how to find and fix bottlenecks in your programs.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:39:"webmaster@oreillynet.com (Jeremy Jones)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:17:"Python, Tutorials";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 11 May 2006 09:44:42 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-05-11T09:44:42-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:11;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:43:"Run Python Scripts on Your Nokia Smartphone";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:152:"http://www.onlamp.com/pub/a/python/excerpt/nokia-smartphone-hacks_chap01/index.html?CMP=OTC-UD6648202101&ATT=Run+Python+Scripts+on+Your+Nokia+Smartphone";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:83:"http://www.onlamp.com/pub/a/python/excerpt/nokia-smartphone-hacks_chap01/index.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:752:"<a href='http://www.onlamp.com/pub/a/python/excerpt/nokia-smartphone-hacks_chap01/index.html?CMP=OTC-UD6648202101&amp;ATT=Run+Python+Scripts+on+Your+Nokia+Smartphone'><img src='http://www.oreillynet.com/python/2005/11/10/graphics/111-nokia_scripts.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Most users do not need a full-blown programming platform to develop small hacks for their phones. A scripting language like Python is the perfect tool to automate simple tasks and perform simple logical processing. This excerpt from <a href="http://www.oreilly.com/catalog/nokiasmarthks/">Nokia Smartphone Hacks</a> shows you how to use Python to develop and run scripts for your Series 60 device.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:47:"webmaster@oreillynet.com (O'Reilly Media, Inc.)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:6:"Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 11 May 2006 18:11:27 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-05-11T18:11:27-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:12;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:39:"Testing Web Apps Effectively with twill";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:121:"http://www.onlamp.com/pub/a/python/2005/11/03/twill.html?CMP=OTC-UD6648202101&ATT=Testing+Web+Apps+Effectively+with+twill";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:56:"http://www.onlamp.com/pub/a/python/2005/11/03/twill.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:672:"<a href='http://www.onlamp.com/pub/a/python/2005/11/03/twill.html?CMP=OTC-UD6648202101&amp;ATT=Testing+Web+Apps+Effectively+with+twill'><img src='http://www.oreillynet.com/python/2005/11/03/graphics/111-webapp_test.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>There's a real drive toward testing these days. If you develop any sort of application seriously, you've likely heard recommendations to write comprehensive automated tests. Is that really useful? Michele Simionato explores the arguments for and against automated testing, and shows how to automate web app testing using Python and the twill utility.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:44:"webmaster@oreillynet.com (Michele Simionato)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:26:"Python, Programming, Tools";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 11 May 2006 09:44:42 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-05-11T09:44:42-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:13;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:31:"Interactive Debugging in Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:116:"http://www.onlamp.com/pub/a/python/2005/09/01/debugger.html?CMP=OTC-UD6648202101&ATT=Interactive+Debugging+in+Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:59:"http://www.onlamp.com/pub/a/python/2005/09/01/debugger.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:611:"<a href='http://www.onlamp.com/pub/a/python/2005/09/01/debugger.html?CMP=OTC-UD6648202101&amp;ATT=Interactive+Debugging+in+Python'><img src='http://www.oreillynet.com/python/2005/09/01/graphics/111-debugging.gif' width='111px' height='91px' alt='tile image' align='left' border='0' style='padding-right:5px;' /></a>Debugging with print statements is alive and well. It's not the only way to do it, though. Python has a powerful interactive debugger that can let you get to the heart of your problem faster and more easily--if you know how to use it. Jeremy Jones shows off the features you absolutely must know.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:39:"webmaster@oreillynet.com (Jeremy Jones)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:26:"Python, Programming, Tools";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 11 May 2006 09:44:42 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-05-11T09:44:42-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}i:14;a:6:{s:4:"data";s:17:"
	
	
	
	
	
	
	
	
";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:2:{s:0:"";a:7:{s:5:"title";a:1:{i:0;a:5:{s:4:"data";s:79:"Important Notice for Python DevCenter Readers About O'Reilly RSS and Atom Feeds";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"link";a:1:{i:0;a:5:{s:4:"data";s:174:"http://www.onlamp.com/pub/a/python/2005/08/11/syndication_update.html?CMP=OTC-UD6648202101&ATT=Important+Notice+for+Python+DevCenter+Readers+About+O+Reilly+RSS+and+Atom+Feeds";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:4:"guid";a:1:{i:0;a:5:{s:4:"data";s:69:"http://www.onlamp.com/pub/a/python/2005/08/11/syndication_update.html";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:11:"description";a:1:{i:0;a:5:{s:4:"data";s:1572:"<p>O'Reilly Media, Inc. is rolling out a new syndication mechanism that provides greater control over the content we publish online. You'll notice some improvements immediately, such as better standards compliance, graphical tiles accompanying article descriptions, and enclosure support for podcatching applications. We've tested the new feeds using a variety of popular newsreaders and aggregators, but we realize that there may be a few bumps along the way. If you experience problems, please don't hesitate to send mail to <a href="mailto:webmaster@oreilly.com">webmaster@oreilly.com</a>. Please include detail about your operating system and reader applications. We also welcome your suggestions. Thank you for your continued support of the Python DevCenter.</p> <p>The following URLs represent the Python DevCenter's article and weblog content in a variety of popular formats:</p> <dl> <dt>Atom 1.0</dt> <dd><a href="http://www.oreillynet.com/pub/feed/13">http://www.oreillynet.com/pub/feed/13</a></dd> <dt>RSS 1.0</dt> <dd><a href="http://www.oreillynet.com/pub/feed/13?format=rss1">http://www.oreillynet.com/pub/feed/13?format=rss1</a></dd> <dt>RSS 2.0</dt> <dd><a href="http://www.oreillynet.com/pub/feed/13?format=rss2">http://www.oreillynet.com/pub/feed/13?format=rss2</a></dd> </dl> <p>We will begin automatically redirecting the existing feeds to the new feeds above, but we recommend that you update your feedreader's subscription settings to ensure continuous and uninterrupted service.</p> <p>Thanks,<br/> O'Reilly Media, Inc.'s Online Publishing Group</p>";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:47:"webmaster@oreillynet.com (O'Reilly Media, Inc.)";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:6:"Python";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:7:"pubDate";a:1:{i:0;a:5:{s:4:"data";s:29:"Thu, 11 May 2006 18:11:27 PST";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}s:32:"http://purl.org/dc/elements/1.1/";a:1:{s:4:"date";a:1:{i:0;a:5:{s:4:"data";s:25:"2006-05-11T18:11:27-08:00";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}s:42:"http://www.itunes.com/dtds/podcast-1.0.dtd";a:4:{s:6:"author";a:1:{i:0;a:5:{s:4:"data";s:20:"O'Reilly Media, Inc.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"category";a:1:{i:0;a:5:{s:4:"data";s:0:"";s:7:"attribs";a:1:{s:0:"";a:1:{s:4:"text";s:10:"Technology";}}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:8:"explicit";a:1:{i:0;a:5:{s:4:"data";s:2:"no";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"owner";a:1:{i:0;a:6:{s:4:"data";s:3:"


";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";s:5:"child";a:1:{s:42:"http://www.itunes.com/dtds/podcast-1.0.dtd";a:2:{s:4:"name";a:1:{i:0;a:5:{s:4:"data";s:20:"O'Reilly Media, Inc.";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}s:5:"email";a:1:{i:0;a:5:{s:4:"data";s:24:"webmaster@oreillynet.com";s:7:"attribs";a:0:{}s:8:"xml_base";s:0:"";s:17:"xml_base_explicit";b:0;s:8:"xml_lang";s:0:"";}}}}}}}}}}}}}}}}s:7:"headers";a:8:{s:4:"date";s:29:"Wed, 01 Apr 2009 17:23:31 GMT";s:6:"server";s:6:"Apache";s:3:"p3p";s:174:"policyref=http://www.oreillynet.com/w3c/p3p.xml,CP=CAO DSP COR CURa ADMa DEVa TAIa PSAa PSDa IVAa IVDa CONo OUR DELa PUBi OTRa IND PHY ONL UNI PUR COM NAV INT DEM CNT STA PRE";s:12:"content-type";s:19:"application/rss+xml";s:7:"x-cache";s:18:"MISS from olive.bp";s:14:"x-cache-lookup";s:23:"MISS from olive.bp:3128";s:3:"via";s:38:"1.0 olive.bp:3128 (squid/2.6.STABLE13)";s:10:"connection";s:5:"close";}s:5:"build";d:20070719221955;}